package com.redhat.summit2019.service;

import com.redhat.summit2019.model.Insult;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.RequestBody;
import twitter4j.Status;
import twitter4j.StatusUpdate;
import twitter4j.Twitter;
import twitter4j.TwitterFactory;

import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import java.time.Instant;
import java.util.Date;


@Path("/tweet")
@Component
public class TwitterService {

        @POST
        @Produces("application/json")
        public ResponseEntity<String> tweet(@RequestBody Insult insult) {
            try{
                Twitter twitter = TwitterFactory.getSingleton();
                StringBuilder stringBuilder = new StringBuilder()
                        .append(insult.getInsult())
                        .append(" - Generated by SpringBoot in the Red Hat Summit Shakespearean Insult Workshop at ")
                        .append(Date.from(Instant.now()).getTime());
                StatusUpdate statusUpdate = new StatusUpdate(stringBuilder.toString());
                Status status = twitter.updateStatus(statusUpdate);
                System.out.println(status.toString());
                return ResponseEntity.status(HttpStatus.ACCEPTED).build();
            }catch(Exception e){
                System.out.println(e.getMessage());
                return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
            }

        }
    }
